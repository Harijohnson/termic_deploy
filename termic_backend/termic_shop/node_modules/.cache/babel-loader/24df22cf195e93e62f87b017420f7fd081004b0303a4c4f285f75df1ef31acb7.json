{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARI_JOHNSON\\\\Desktop\\\\digital-shop\\\\termic_deploy\\\\termic_backend\\\\termic_shop\\\\src\\\\screens\\\\ProductEditScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport FormContainer from '../components/FormContainer';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport axios from 'axios';\nimport { Carousel } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductEditScreen() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  // const orderId = match.params.id\n  const productId = id;\n\n  // console.log('priduct_id is :',productId)\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [image1, setImage1] = useState('');\n  const [image2, setImage2] = useState('');\n  const [image3, setImage3] = useState('');\n  const [image4, setImage4] = useState('');\n  const [image5, setImage5] = useState('');\n  const [image6, setImage6] = useState('');\n  const [image7, setImage7] = useState('');\n  const [image8, setImage8] = useState('');\n  const [image9, setImage9] = useState('');\n  const [image10, setImage10] = useState('');\n  const [carousel, setCarousel] = useState(null);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    error,\n    loading,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      navigate('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name || \"\");\n        setPrice(product.price || 0);\n        setBrand(product.brand || \"\");\n        setCategory(product.category || \"\");\n        setDescription(product.description || \"\");\n        // setImage(product.image || \"\")\n        setCountInStock(product.countInStock || 0);\n        setCarousel(product.carousel || null);\n        // Assuming there are fields like 'image1', 'image2', etc. in the product model\n        setImage1(product.image1 || '');\n        setImage2(product.image2 || '');\n        setImage3(product.image3 || '');\n        setImage4(product.image4 || '');\n        setImage5(product.image5 || '');\n        setImage6(product.image6 || '');\n        setImage7(product.image7 || '');\n        setImage8(product.image8 || '');\n        setImage9(product.image9 || '');\n        setImage10(product.image10 || '');\n      }\n    }\n  }, [product, productId, navigate, dispatch, successUpdate]);\n  const submitHandeler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      brand,\n      countInStock,\n      category,\n      description,\n      carousel,\n      image1,\n      image2,\n      image3,\n      image4,\n      image5,\n      image6,\n      image7,\n      image8,\n      image9,\n      image10\n    }));\n  };\n  const uploadFileHandler = async (e, fieldName) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(fieldName, file);\n    formData.append('product_id', productId);\n    setUploading(true);\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/products/upload/', formData, config);\n      if (fieldName === 'carousel') {\n        setCarousel(data);\n      } else if (fieldName === 'image1') {\n        setImage1(data);\n      } else if (fieldName === 'image2') {\n        setImage2(data);\n      } else if (fieldName === 'image3') {\n        setImage3(data);\n      } else if (fieldName === 'image4') {\n        setImage1(data);\n      } else if (fieldName === 'image5') {\n        setImage2(data);\n      } else if (fieldName === 'image6') {\n        setImage3(data);\n      } else if (fieldName === 'image7') {\n        setImage1(data);\n      } else if (fieldName === 'image8') {\n        setImage2(data);\n      } else if (fieldName === 'image9') {\n        setImage3(data);\n      } else if (fieldName === 'image10') {\n        setImage1(data);\n      }\n      setUploading(false);\n    } catch (error) {\n      console.error('File upload error:', error);\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 24\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandeler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Image 1 URL\",\n            value: image1,\n            onChange: e => setImage1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            label: \"Choose Image\",\n            custom: \"true\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 20\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countinstock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductEditScreen, \"VOPAWllwjHyTLBU1Hpri9C/X8eU=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ProductEditScreen;\nexport default ProductEditScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"names":["React","useEffect","useState","Link","useLocation","useNavigate","useParams","Form","Button","Col","Row","Loader","Message","useDispatch","useSelector","listProductDetails","updateProduct","FormContainer","PRODUCT_UPDATE_RESET","axios","Carousel","jsxDEV","_jsxDEV","ProductEditScreen","_s","navigate","id","productId","name","setName","price","setPrice","brand","setBrand","category","setCategory","image","setImage","countInStock","setCountInStock","description","setDescription","uploading","setUploading","image1","setImage1","image2","setImage2","image3","setImage3","image4","setImage4","image5","setImage5","image6","setImage6","image7","setImage7","image8","setImage8","image9","setImage9","image10","setImage10","carousel","setCarousel","dispatch","productDetails","state","error","loading","product","productUpdate","errorUpdate","loadingUpdate","success","successUpdate","userLogin","userInfo","type","_id","Number","submitHandeler","e","preventDefault","uploadFileHandler","fieldName","file","target","files","formData","FormData","append","config","headers","Authorization","token","data","post","console","children","to","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","label","custom","_c","$RefreshReg$"],"sources":["C:/Users/HARI_JOHNSON/Desktop/digital-shop/termic_deploy/termic_backend/termic_shop/src/screens/ProductEditScreen.js"],"sourcesContent":["import React,{ useEffect,useState } from 'react'\r\nimport { Link, useLocation,useNavigate,useParams } from 'react-router-dom'\r\nimport { Form,Button,Col,Row } from 'react-bootstrap'\r\nimport  Loader   from '../components/Loader'\r\nimport  Message   from '../components/Message'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport  FormContainer   from '../components/FormContainer'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport  axios  from 'axios'\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\nfunction ProductEditScreen() {\r\n    const navigate = useNavigate()\r\n    const  { id } = useParams();\r\n    // const orderId = match.params.id\r\n    const productId  = id\r\n\r\n    // console.log('priduct_id is :',productId)\r\n\r\n\r\n    const [name,setName] = useState('')\r\n    const [price,setPrice] = useState(0)\r\n    const [brand,setBrand] = useState('')\r\n    const [category,setCategory] = useState('')\r\n    const [image,setImage] = useState('')\r\n    const [countInStock,setCountInStock] = useState(0)\r\n    const [description,setDescription] = useState(\"\")\r\n    const [uploading,setUploading] = useState(false)\r\n\r\n    const [image1, setImage1] = useState('');\r\n    const [image2, setImage2] = useState('');\r\n    const [image3, setImage3] = useState('');\r\n    const [image4, setImage4] = useState('');\r\n    const [image5, setImage5] = useState('');\r\n    const [image6, setImage6] = useState('');\r\n    const [image7, setImage7] = useState('');\r\n    const [image8, setImage8] = useState('');\r\n    const [image9, setImage9] = useState('');\r\n    const [image10, setImage10] = useState('');\r\n    const [carousel, setCarousel] = useState(null);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { error,loading,product } = productDetails\r\n\r\n    \r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const { error:errorUpdate,loading:loadingUpdate,success:successUpdate} = productUpdate\r\n\r\n        \r\n    const userLogin = useSelector((state)=>state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    useEffect (() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type:PRODUCT_UPDATE_RESET})\r\n            navigate('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== Number(productId)) {\r\n            dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name || \"\")\r\n                setPrice(product.price || 0)\r\n                setBrand(product.brand || \"\")\r\n                setCategory(product.category || \"\")\r\n                setDescription(product.description || \"\")\r\n                // setImage(product.image || \"\")\r\n                setCountInStock(product.countInStock || 0)\r\n                setCarousel(product.carousel || null);\r\n                // Assuming there are fields like 'image1', 'image2', etc. in the product model\r\n                setImage1(product.image1 || '');\r\n                setImage2(product.image2 || '');\r\n                setImage3(product.image3 || '');\r\n                setImage4(product.image4 || '');\r\n                setImage5(product.image5 || '');\r\n                setImage6(product.image6 || '');\r\n                setImage7(product.image7 || '');\r\n                setImage8(product.image8 || '');\r\n                setImage9(product.image9 || '');\r\n                setImage10(product.image10 || '');\r\n             \r\n\r\n\r\n            }\r\n        }}\r\n     , [product,productId,navigate,dispatch,successUpdate])\r\n    \r\n    const submitHandeler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            brand,\r\n            countInStock,\r\n            category,\r\n            description,\r\n            carousel,\r\n            image1,\r\n            image2,\r\n            image3,\r\n            image4,\r\n            image5,\r\n            image6,\r\n            image7,\r\n            image8,\r\n            image9,\r\n            image10,\r\n            \r\n            }))\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n    const uploadFileHandler  = async(e,fieldName) =>\r\n     {\r\n        const file = e.target.files[0]\r\n        const formData =new FormData()\r\n\r\n        formData.append(fieldName,file)\r\n        formData.append('product_id',productId)\r\n        setUploading(true)\r\n\r\n        try{\r\n\r\n\r\n            const config ={\r\n                headers:{\r\n                    'Content-Type':'multipart/form-data',\r\n                    Authorization  :`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n\r\n\r\n            const {data} = await axios.post('/api/products/upload/',\r\n            formData,\r\n            config)\r\n\r\n            if (fieldName === 'carousel') {\r\n                setCarousel(data);\r\n                } \r\n            else if (fieldName === 'image1') {\r\n                setImage1(data);\r\n                } \r\n            else if (fieldName === 'image2') {\r\n                setImage2(data);\r\n                } \r\n            else if (fieldName === 'image3') {\r\n                setImage3(data);\r\n                }\r\n            else if (fieldName === 'image4') {\r\n                setImage1(data);\r\n                } \r\n            else if (fieldName === 'image5') {\r\n                setImage2(data);\r\n                } \r\n            else if (fieldName === 'image6') {\r\n                setImage3(data);\r\n                }\r\n            else if (fieldName === 'image7') {\r\n                setImage1(data);\r\n                } \r\n            else if (fieldName === 'image8') {\r\n                setImage2(data);\r\n                } \r\n            else if (fieldName === 'image9') {\r\n                setImage3(data);\r\n                }\r\n            else if (fieldName === 'image10') {\r\n                    setImage1(data);\r\n                    } \r\n              \r\n            \r\n            setUploading(false)\r\n\r\n        }catch(error){\r\n            console.error('File upload error:', error);\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n        <Link to='/admin/productlist'>Go Back</Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant = 'danger'>{errorUpdate}</Message>}\r\n\r\n\r\n            {loading ? <Loader />\r\n            :error ?  (<Message variant='danger'>{error}</Message>)\r\n            :(\r\n                <Form onSubmit={ submitHandeler }>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Name'\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>\r\n                            Price\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='number'\r\n                        placeholder='Enter Price'\r\n                        value={price}\r\n                        onChange={(e)=>setPrice(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {/* <Form.Group controlId='image'>\r\n                        <Form.Label>\r\n                            Image\r\n                        </Form.Label>\r\n\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter Image'\r\n                        value={image}\r\n                        onChange={(e)=>setImage(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n\r\n                        <Form.Control\r\n                        type='file'\r\n                        label ='Choose Image'\r\n                        custom='true'\r\n                        onChange ={ uploadFileHandler}>\r\n                            \r\n                        </Form.Control>\r\n                        {uploading && <Loader />}\r\n\r\n                    </Form.Group>  */}\r\n\r\n                <Form.Group controlId='image1'>\r\n                    <Form.Label>Image 1</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image 1 URL'\r\n                        value={image1}\r\n                        onChange={(e) => setImage1(e.target.value)}\r\n                    />\r\n                   <Form.Control\r\n                        type='file'\r\n                        label ='Choose Image'\r\n                        custom='true'\r\n                        onChange ={ uploadFileHandler}>\r\n                            \r\n                        </Form.Control>\r\n                        {uploading && <Loader />}\r\n                </Form.Group>\r\n\r\n\r\n                {/* <Form.Group controlId='image2'>\r\n                <Form.Label>Image 2</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Image 2 URL'\r\n                    value={image2}\r\n                    onChange={(e) => setImage2(e.target.value)}\r\n                />\r\n                    <Form.File id='image-2' label='Choose Image 2' custom onChange={(e) => uploadFileHandler(e, 'image2')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n                {/* <Form.Group controlId='image3'>\r\n                    <Form.Label>Image 3</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image 3 URL'\r\n                        value={image3}\r\n                        onChange={(e) => setImage3(e.target.value)}\r\n                    />\r\n                    <Form.File id='image-3' label='Choose Image 3' custom onChange={(e) => uploadFileHandler(e, 'image3')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n\r\n                {/* <Form.Group controlId='image4'>\r\n                    <Form.Label>Image 4</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image 4 URL'\r\n                        value={image4}\r\n                        onChange={(e) => setImage4(e.target.value)}\r\n                    />\r\n                    <Form.File id='image-4' label='Choose Image 4' custom onChange={(e) => uploadFileHandler(e, 'image4')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n{/* \r\n                <Form.Group controlId='image5'>\r\n                <Form.Label>Image 5</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Image 5 URL'\r\n                    value={image5}\r\n                    onChange={(e) => setImage5(e.target.value)}\r\n                />\r\n                    <Form.File id='image-5' label='Choose Image 5' custom onChange={(e) => uploadFileHandler(e, 'image5')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n                {/* <Form.Group controlId='image6'>\r\n                    <Form.Label>Image 6</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image 6 URL'\r\n                        value={image6}\r\n                        onChange={(e) => setImage6(e.target.value)}\r\n                    />\r\n                    <Form.File id='image-6' label='Choose Image 6' custom onChange={(e) => uploadFileHandler(e, 'image6')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n\r\n\r\n\r\n{/* \r\n                <Form.Group controlId='image7'>\r\n                    <Form.Label>Image 7</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image 7 URL'\r\n                        value={image7}\r\n                        onChange={(e) => setImage7(e.target.value)}\r\n                    />\r\n                    <Form.File id='image-7' label='Choose Image 7' custom onChange={(e) => uploadFileHandler(e, 'image7')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n                {/* <Form.Group controlId='image8'>\r\n                <Form.Label>Image 8</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Image 8 URL'\r\n                    value={image8}\r\n                    onChange={(e) => setImage8(e.target.value)}\r\n                />\r\n                    <Form.File id='image-8' label='Choose Image 8' custom onChange={(e) => uploadFileHandler(e, 'image8')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n\r\n\r\n                {/* <Form.Group controlId='image9'>\r\n                    <Form.Label>Image 9</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image 3 URL'\r\n                        value={image9}\r\n                        onChange={(e) => setImage9(e.target.value)}\r\n                    />\r\n                    <Form.File id='image-9' label='Choose Image 9' custom onChange={(e) => uploadFileHandler(e, 'image9')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/* <Form.Group controlId='image10'>\r\n                    <Form.Label>Image 10</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image 10 URL'\r\n                        value={image10}\r\n                        onChange={(e) => setImage10(e.target.value)}\r\n                    />\r\n                    <Form.File id='image-10' label='Choose Image 10' custom onChange={(e) => uploadFileHandler(e, 'image10')} />\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n\r\n\r\n\r\n                {/* coroulesl */}\r\n\r\n                {/* <Form.Group controlId='carouselImage'>\r\n              <Form.Label>Carousel Image</Form.Label>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Carousel Image URL'\r\n                    value={carousel || ''}\r\n                    onChange={(e) => setCarousel(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.File\r\n                    id='carousel-image'\r\n                    label='Choose Carousel Image'\r\n                    custom\r\n                    onChange={(e) => uploadFileHandler(e, 'carousel')}\r\n                  />\r\n                  {uploading && <Loader />}\r\n                </Col>\r\n              </Row>\r\n                </Form.Group> */}\r\n\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>\r\n                            Brand\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='brand'\r\n                        value={brand}\r\n                        onChange={(e)=>setBrand(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countinstock'>\r\n                        <Form.Label>\r\n                            Stock\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='number'\r\n                        placeholder='Stock'\r\n                        value={countInStock}\r\n                        onChange={(e)=>setCountInStock(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>\r\n                            Category\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Category'\r\n                        value={category}\r\n                        onChange={(e)=>setCategory(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>\r\n                           Description\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Description'\r\n                        value={description}\r\n                        onChange={(e)=>setDescription(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <br></br>\r\n\r\n                    <Button \r\n                    type='submit'\r\n                    variant='primary' >\r\n                        Update\r\n                    </Button>\r\n\r\n\r\n                </Form>\r\n\r\n            )}\r\n        </FormContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAChD,SAASC,IAAI,EAAEC,WAAW,EAACC,WAAW,EAACC,SAAS,QAAQ,kBAAkB;AAC1E,SAASC,IAAI,EAACC,MAAM,EAACC,GAAG,EAACC,GAAG,QAAQ,iBAAiB;AACrD,OAAQC,MAAM,MAAQ,sBAAsB;AAC5C,OAAQC,OAAO,MAAQ,uBAAuB;AAC9C,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,kBAAkB,EAAEC,aAAa,QAAQ,2BAA2B;AAC7E,OAAQC,aAAa,MAAQ,6BAA6B;AAC1D,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE,OAAQC,KAAK,MAAO,OAAO;AAC3B,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAO;IAAEqB;EAAG,CAAC,GAAGpB,SAAS,CAAC,CAAC;EAC3B;EACA,MAAMqB,SAAS,GAAID,EAAE;;EAErB;;EAGA,MAAM,CAACE,IAAI,EAACC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAAC4B,KAAK,EAACC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAM,CAAC8B,KAAK,EAACC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACgC,QAAQ,EAACC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACkC,KAAK,EAACC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACoC,YAAY,EAACC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAClD,MAAM,CAACsC,WAAW,EAACC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACwC,SAAS,EAACC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAEhD,MAAM,CAAC0C,MAAM,EAAEC,SAAS,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC4C,MAAM,EAAEC,SAAS,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8C,MAAM,EAAEC,SAAS,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgD,MAAM,EAAEC,SAAS,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkD,MAAM,EAAEC,SAAS,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoD,MAAM,EAAEC,SAAS,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsD,MAAM,EAAEC,SAAS,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACwD,MAAM,EAAEC,SAAS,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC0D,MAAM,EAAEC,SAAS,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC4D,OAAO,EAAEC,UAAU,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8D,QAAQ,EAAEC,WAAW,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAG9C,MAAMgE,QAAQ,GAAGrD,WAAW,CAAC,CAAC;EAI9B,MAAMsD,cAAc,GAAGrD,WAAW,CAAEsD,KAAK,IAAKA,KAAK,CAACD,cAAc,CAAC;EACnE,MAAM;IAAEE,KAAK;IAACC,OAAO;IAACC;EAAQ,CAAC,GAAGJ,cAAc;EAGhD,MAAMK,aAAa,GAAG1D,WAAW,CAAEsD,KAAK,IAAKA,KAAK,CAACI,aAAa,CAAC;EACjE,MAAM;IAAEH,KAAK,EAACI,WAAW;IAACH,OAAO,EAACI,aAAa;IAACC,OAAO,EAACC;EAAa,CAAC,GAAGJ,aAAa;EAGtF,MAAMK,SAAS,GAAG/D,WAAW,CAAEsD,KAAK,IAAGA,KAAK,CAACS,SAAS,CAAC;EACvD,MAAM;IAAEC;EAAS,CAAC,GAAGD,SAAS;EAG9B5E,SAAS,CAAE,MAAM;IAEb,IAAG2E,aAAa,EAAC;MACbV,QAAQ,CAAC;QAACa,IAAI,EAAC7D;MAAoB,CAAC,CAAC;MACrCO,QAAQ,CAAC,oBAAoB,CAAC;IAClC,CAAC,MAAI;MACD,IAAG,CAAC8C,OAAO,CAAC3C,IAAI,IAAI2C,OAAO,CAACS,GAAG,KAAKC,MAAM,CAACtD,SAAS,CAAC,EAAE;QACvDuC,QAAQ,CAACnD,kBAAkB,CAACY,SAAS,CAAC,CAAC;MACvC,CAAC,MAAI;QACDE,OAAO,CAAC0C,OAAO,CAAC3C,IAAI,IAAI,EAAE,CAAC;QAC3BG,QAAQ,CAACwC,OAAO,CAACzC,KAAK,IAAI,CAAC,CAAC;QAC5BG,QAAQ,CAACsC,OAAO,CAACvC,KAAK,IAAI,EAAE,CAAC;QAC7BG,WAAW,CAACoC,OAAO,CAACrC,QAAQ,IAAI,EAAE,CAAC;QACnCO,cAAc,CAAC8B,OAAO,CAAC/B,WAAW,IAAI,EAAE,CAAC;QACzC;QACAD,eAAe,CAACgC,OAAO,CAACjC,YAAY,IAAI,CAAC,CAAC;QAC1C2B,WAAW,CAACM,OAAO,CAACP,QAAQ,IAAI,IAAI,CAAC;QACrC;QACAnB,SAAS,CAAC0B,OAAO,CAAC3B,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACwB,OAAO,CAACzB,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACsB,OAAO,CAACvB,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACoB,OAAO,CAACrB,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACkB,OAAO,CAACnB,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACgB,OAAO,CAACjB,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACc,OAAO,CAACf,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACY,OAAO,CAACb,MAAM,IAAI,EAAE,CAAC;QAC/BG,SAAS,CAACU,OAAO,CAACX,MAAM,IAAI,EAAE,CAAC;QAC/BG,UAAU,CAACQ,OAAO,CAACT,OAAO,IAAI,EAAE,CAAC;MAIrC;IACJ;EAAC,CAAC,EACH,CAACS,OAAO,EAAC5C,SAAS,EAACF,QAAQ,EAACyC,QAAQ,EAACU,aAAa,CAAC,CAAC;EAEvD,MAAMM,cAAc,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBlB,QAAQ,CAAClD,aAAa,CAAC;MACnBgE,GAAG,EAACrD,SAAS;MACbC,IAAI;MACJE,KAAK;MACLE,KAAK;MACLM,YAAY;MACZJ,QAAQ;MACRM,WAAW;MACXwB,QAAQ;MACRpB,MAAM;MACNE,MAAM;MACNE,MAAM;MACNE,MAAM;MACNE,MAAM;MACNE,MAAM;MACNE,MAAM;MACNE,MAAM;MACNE,MAAM;MACNE;IAEA,CAAC,CAAC,CAAC;EAEX,CAAC;EAKD,MAAMuB,iBAAiB,GAAI,MAAAA,CAAMF,CAAC,EAACG,SAAS,KAC3C;IACG,MAAMC,IAAI,GAAGJ,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAE,IAAIC,QAAQ,CAAC,CAAC;IAE9BD,QAAQ,CAACE,MAAM,CAACN,SAAS,EAACC,IAAI,CAAC;IAC/BG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAACjE,SAAS,CAAC;IACvCgB,YAAY,CAAC,IAAI,CAAC;IAElB,IAAG;MAGC,MAAMkD,MAAM,GAAE;QACVC,OAAO,EAAC;UACJ,cAAc,EAAC,qBAAqB;UACpCC,aAAa,EAAI,UAASjB,QAAQ,CAACkB,KAAM;QAC7C;MACJ,CAAC;MAGD,MAAM;QAACC;MAAI,CAAC,GAAG,MAAM9E,KAAK,CAAC+E,IAAI,CAAC,uBAAuB,EACvDR,QAAQ,EACRG,MAAM,CAAC;MAEP,IAAIP,SAAS,KAAK,UAAU,EAAE;QAC1BrB,WAAW,CAACgC,IAAI,CAAC;MACjB,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BzC,SAAS,CAACoD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BvC,SAAS,CAACkD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BrC,SAAS,CAACgD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BzC,SAAS,CAACoD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BvC,SAAS,CAACkD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BrC,SAAS,CAACgD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BzC,SAAS,CAACoD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BvC,SAAS,CAACkD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,QAAQ,EAAE;QAC7BrC,SAAS,CAACgD,IAAI,CAAC;MACf,CAAC,MACA,IAAIX,SAAS,KAAK,SAAS,EAAE;QAC1BzC,SAAS,CAACoD,IAAI,CAAC;MACf;MAGRtD,YAAY,CAAC,KAAK,CAAC;IAEvB,CAAC,QAAM0B,KAAK,EAAC;MACT8B,OAAO,CAAC9B,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C1B,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAIH,oBAEErB,OAAA;IAAA8E,QAAA,gBAEI9E,OAAA,CAACnB,IAAI;MAACkG,EAAE,EAAC,oBAAoB;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE5CnF,OAAA,CAACL,aAAa;MAAAmF,QAAA,gBACV9E,OAAA;QAAA8E,QAAA,EAAI;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpB/B,aAAa,iBAAIpD,OAAA,CAACX,MAAM;QAAA2F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3BhC,WAAW,iBAAInD,OAAA,CAACV,OAAO;QAAC8F,OAAO,EAAG,QAAQ;QAAAN,QAAA,EAAE3B;MAAW;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,EAGlEnC,OAAO,gBAAGhD,OAAA,CAACX,MAAM;QAAA2F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACpBpC,KAAK,gBAAK/C,OAAA,CAACV,OAAO;QAAC8F,OAAO,EAAC,QAAQ;QAAAN,QAAA,EAAE/B;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,gBAElDnF,OAAA,CAACf,IAAI;QAACoG,QAAQ,EAAGzB,cAAgB;QAAAkB,QAAA,gBAC7B9E,OAAA,CAACf,IAAI,CAACqG,KAAK;UAACC,SAAS,EAAC,MAAM;UAAAT,QAAA,gBACxB9E,OAAA,CAACf,IAAI,CAACuG,KAAK;YAAAV,QAAA,EAAC;UAEZ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACbhC,IAAI,EAAC,MAAM;YACXiC,WAAW,EAAC,MAAM;YAClBC,KAAK,EAAErF,IAAK;YACZsF,QAAQ,EAAG/B,CAAC,IAAGtD,OAAO,CAACsD,CAAC,CAACK,MAAM,CAACyB,KAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAGbnF,OAAA,CAACf,IAAI,CAACqG,KAAK;UAACC,SAAS,EAAC,OAAO;UAAAT,QAAA,gBACzB9E,OAAA,CAACf,IAAI,CAACuG,KAAK;YAAAV,QAAA,EAAC;UAEZ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACbhC,IAAI,EAAC,QAAQ;YACbiC,WAAW,EAAC,aAAa;YACzBC,KAAK,EAAEnF,KAAM;YACboF,QAAQ,EAAG/B,CAAC,IAAGpD,QAAQ,CAACoD,CAAC,CAACK,MAAM,CAACyB,KAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAyCjBnF,OAAA,CAACf,IAAI,CAACqG,KAAK;UAACC,SAAS,EAAC,QAAQ;UAAAT,QAAA,gBAC1B9E,OAAA,CAACf,IAAI,CAACuG,KAAK;YAAAV,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAChCnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACThC,IAAI,EAAC,MAAM;YACXiC,WAAW,EAAC,mBAAmB;YAC/BC,KAAK,EAAErE,MAAO;YACdsE,QAAQ,EAAG/B,CAAC,IAAKtC,SAAS,CAACsC,CAAC,CAACK,MAAM,CAACyB,KAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eACHnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACRhC,IAAI,EAAC,MAAM;YACXoC,KAAK,EAAE,cAAc;YACrBC,MAAM,EAAC,MAAM;YACbF,QAAQ,EAAI7B;UAAkB;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB,CAAC,EACd/D,SAAS,iBAAIpB,OAAA,CAACX,MAAM;YAAA2F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eA6JTnF,OAAA,CAACf,IAAI,CAACqG,KAAK;UAACC,SAAS,EAAC,OAAO;UAAAT,QAAA,gBACzB9E,OAAA,CAACf,IAAI,CAACuG,KAAK;YAAAV,QAAA,EAAC;UAEZ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACbhC,IAAI,EAAC,MAAM;YACXiC,WAAW,EAAC,OAAO;YACnBC,KAAK,EAAEjF,KAAM;YACbkF,QAAQ,EAAG/B,CAAC,IAAGlD,QAAQ,CAACkD,CAAC,CAACK,MAAM,CAACyB,KAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAEbnF,OAAA,CAACf,IAAI,CAACqG,KAAK;UAACC,SAAS,EAAC,cAAc;UAAAT,QAAA,gBAChC9E,OAAA,CAACf,IAAI,CAACuG,KAAK;YAAAV,QAAA,EAAC;UAEZ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACbhC,IAAI,EAAC,QAAQ;YACbiC,WAAW,EAAC,OAAO;YACnBC,KAAK,EAAE3E,YAAa;YACpB4E,QAAQ,EAAG/B,CAAC,IAAG5C,eAAe,CAAC4C,CAAC,CAACK,MAAM,CAACyB,KAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEjC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAEbnF,OAAA,CAACf,IAAI,CAACqG,KAAK;UAACC,SAAS,EAAC,UAAU;UAAAT,QAAA,gBAC5B9E,OAAA,CAACf,IAAI,CAACuG,KAAK;YAAAV,QAAA,EAAC;UAEZ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACbhC,IAAI,EAAC,MAAM;YACXiC,WAAW,EAAC,UAAU;YACtBC,KAAK,EAAE/E,QAAS;YAChBgF,QAAQ,EAAG/B,CAAC,IAAGhD,WAAW,CAACgD,CAAC,CAACK,MAAM,CAACyB,KAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAEbnF,OAAA,CAACf,IAAI,CAACqG,KAAK;UAACC,SAAS,EAAC,aAAa;UAAAT,QAAA,gBAC/B9E,OAAA,CAACf,IAAI,CAACuG,KAAK;YAAAV,QAAA,EAAC;UAEZ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbnF,OAAA,CAACf,IAAI,CAACwG,OAAO;YACbhC,IAAI,EAAC,MAAM;YACXiC,WAAW,EAAC,aAAa;YACzBC,KAAK,EAAEzE,WAAY;YACnB0E,QAAQ,EAAG/B,CAAC,IAAG1C,cAAc,CAAC0C,CAAC,CAACK,MAAM,CAACyB,KAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAGbnF,OAAA;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETnF,OAAA,CAACd,MAAM;UACPuE,IAAI,EAAC,QAAQ;UACb2B,OAAO,EAAC,SAAS;UAAAN,QAAA,EAAE;QAEnB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CAET;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACjF,EAAA,CAvfQD,iBAAiB;EAAA,QACLlB,WAAW,EACZC,SAAS,EA6BRO,WAAW,EAILC,WAAW,EAIZA,WAAW,EAIfA,WAAW;AAAA;AAAAuG,EAAA,GA3CxB9F,iBAAiB;AAyf1B,eAAeA,iBAAiB;AAAA,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}