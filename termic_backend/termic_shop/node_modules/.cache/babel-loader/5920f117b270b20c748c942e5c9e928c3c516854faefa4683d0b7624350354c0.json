{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nimport { userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, ordeDeliveredReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  orderList: orderListReducer,\n  orderDelivered: ordeDeliveredReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","ordeDeliveredReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","userList","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderList","orderDelivered","productReviewCreate","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/HARI_JOHNSON/Desktop/termic_deploy/termic_backend/termic_shop/src/store.js"],"sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {productListReducer,productDetailsReducer,productDeleteReducer,productCreateReducer,productUpdateReducer,productReviewCreateReducer , productTopRatedReducer} from './reducers/productReducers'\r\nimport { cartReducer, } from './reducers/cartReducers'\r\nimport { userLoginReducer } from './reducers/userReducers'\r\nimport { userRegisterReducer,userDetailsReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer } from './reducers/userReducers'\r\nimport { \r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    ordeDeliveredReducer,\r\n     } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    orderCreate : orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    orderList:orderListReducer, \r\n    orderDelivered : ordeDeliveredReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,    \r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) :[]\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\n\r\n\r\nconst initialState =  {\r\n    cart:{\r\n        cartItems:cartItemsFromStorage,\r\n        shippingAddress:shippingAddressFromStorage,\r\n    },\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n\r\n}\r\n\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\n\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\n\r\n\r\nexport default store\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,EAACC,eAAe,EAACC,eAAe,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAQC,kBAAkB,EAACC,qBAAqB,EAACC,oBAAoB,EAACC,oBAAoB,EAACC,oBAAoB,EAACC,0BAA0B,EAAGC,sBAAsB,QAAO,4BAA4B;AACtM,SAASC,WAAW,QAAS,yBAAyB;AACtD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,mBAAmB,EAACC,kBAAkB,EAACC,wBAAwB,EAACC,eAAe,EAACC,iBAAiB,EAACC,iBAAiB,QAAQ,yBAAyB;AAC7J,SACIC,kBAAkB,EAClBC,mBAAmB,EACnBC,eAAe,EACfC,kBAAkB,EAClBC,gBAAgB,EAChBC,oBAAoB,QACZ,yBAAyB;AAErC,MAAMC,OAAO,GAAGzB,eAAe,CAAC;EAC5B0B,WAAW,EAACtB,kBAAkB;EAC9BuB,cAAc,EAACtB,qBAAqB;EACpCuB,IAAI,EAACjB,WAAW;EAChBkB,SAAS,EAACjB,gBAAgB;EAC1BkB,YAAY,EAACjB,mBAAmB;EAChCkB,WAAW,EAACjB,kBAAkB;EAC9BkB,iBAAiB,EAACjB,wBAAwB;EAC1CkB,WAAW,EAAGd,kBAAkB;EAChCe,YAAY,EAAEd,mBAAmB;EACjCe,QAAQ,EAACd,eAAe;EACxBe,WAAW,EAACd,kBAAkB;EAC9Be,QAAQ,EAACrB,eAAe;EACxBsB,UAAU,EAACrB,iBAAiB;EAC5BsB,UAAU,EAACrB,iBAAiB;EAC5BsB,aAAa,EAAClC,oBAAoB;EAClCmC,aAAa,EAAClC,oBAAoB;EAClCmC,aAAa,EAAClC,oBAAoB;EAClCmC,SAAS,EAACpB,gBAAgB;EAC1BqB,cAAc,EAAGpB,oBAAoB;EACrCqB,mBAAmB,EAACpC,0BAA0B;EAC9CqC,eAAe,EAACpC;AAEpB,CAAC,CAAC;AAEF,MAAMqC,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAE,EAAE;AAGrD,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEvD,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAK5D,MAAMK,YAAY,GAAI;EAClB1B,IAAI,EAAC;IACD2B,SAAS,EAACR,oBAAoB;IAC9BS,eAAe,EAACH;EACpB,CAAC;EACDxB,SAAS,EAAC;IAAC4B,QAAQ,EAACL;EAAmB;AAE3C,CAAC;AAID,MAAMM,UAAU,GAAG,CAACxD,KAAK,CAAC;AAI1B,MAAMyD,KAAK,GAAG5D,WAAW,CAAC0B,OAAO,EAAC6B,YAAY,EAACnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAU,CAAC,CAAC,CAAC;AAKnG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}