{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARI_JOHNSON\\\\Desktop\\\\digital-shop\\\\termic_deploy\\\\termic_backend\\\\termic_shop\\\\src\\\\screens\\\\ProductEditScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport FormContainer from '../components/FormContainer';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductEditScreen() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  // const orderId = match.params.id\n  const productId = id;\n\n  // console.log('priduct_id is :',productId)\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  // const [image,setImage] = useState('')\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [images, setImages] = useState(Array.from({\n    length: 10\n  }, () => ''));\n  const [carousel, setCarousel] = useState(null);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    error,\n    loading,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      navigate('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name || \"\");\n        setPrice(product.price || 0);\n        setBrand(product.brand || \"\");\n        setCategory(product.category || \"\");\n        setDescription(product.description || \"\");\n        // setImage(product.image || \"\")\n        setCountInStock(product.countInStock || 0);\n        setImages(product.images || Array.from({\n          length: 10\n        }, () => ''));\n        // Assuming there is a field like 'carouselImage' in the product model\n        setCarouselImage(product.carousel || null);\n      }\n    }\n  }, [product, productId, navigate, dispatch, successUpdate]);\n  const submitHandeler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      images,\n      brand,\n      countInStock,\n      category,\n      description,\n      carousel\n    }));\n  };\n  const uploadFileHandler = async (e, index) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('product_id', productId);\n    setUploading(true);\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/products/upload/', formData, config);\n\n      // setImage(data)\n      setImages(prevImages => {\n        const newImages = [...prevImages];\n        newImages[index] = data;\n        return newImages;\n      });\n      9;\n      setCarousel(data);\n      setUploading(false);\n    } catch (error) {\n      console.error('File upload error:', error);\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 24\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandeler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"images\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: `Enter Image ${index + 1}`,\n                value: image,\n                onChange: e => {\n                  setImages(prevImages => {\n                    const newImages = [...prevImages];\n                    newImages[index] = e.target.value;\n                    return newImages;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.File, {\n                id: `image-${index}`,\n                label: `Choose Image ${index + 1}`,\n                custom: true,\n                onChange: e => uploadFileHandler(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"carouselImage\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Carousel Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: `Enter Carousel Image URL`,\n                value: carouselImage || '',\n                onChange: e => setCarouselImage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.File, {\n                id: `carousel-image`,\n                label: `Choose Carousel Image`,\n                custom: true,\n                onChange: e => uploadFileHandler(e, 'carousel')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"imageCarousel\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image Carousel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n            children: [images.map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Image ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)), carouselImage && /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: carouselImage,\n                alt: \"Carousel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countinstock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductEditScreen, \"u17xtbF4WdK/HM3P7kx7zt4MOnU=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ProductEditScreen;\nexport default ProductEditScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"names":["React","useEffect","useState","Link","useLocation","useNavigate","useParams","Form","Button","Col","Row","Loader","Message","useDispatch","useSelector","listProductDetails","updateProduct","FormContainer","PRODUCT_UPDATE_RESET","axios","jsxDEV","_jsxDEV","ProductEditScreen","_s","navigate","id","productId","name","setName","price","setPrice","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","images","setImages","Array","from","length","carousel","setCarousel","dispatch","productDetails","state","error","loading","product","productUpdate","errorUpdate","loadingUpdate","success","successUpdate","userLogin","userInfo","type","_id","Number","setCarouselImage","submitHandeler","e","preventDefault","uploadFileHandler","index","file","target","files","formData","FormData","append","config","headers","Authorization","token","data","post","prevImages","newImages","console","children","to","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","map","image","File","label","custom","carouselImage","Carousel","Item","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/HARI_JOHNSON/Desktop/digital-shop/termic_deploy/termic_backend/termic_shop/src/screens/ProductEditScreen.js"],"sourcesContent":["import React,{ useEffect,useState } from 'react'\r\nimport { Link, useLocation,useNavigate,useParams } from 'react-router-dom'\r\nimport { Form,Button,Col,Row } from 'react-bootstrap'\r\nimport  Loader   from '../components/Loader'\r\nimport  Message   from '../components/Message'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport  FormContainer   from '../components/FormContainer'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport  axios  from 'axios'\r\n\r\n\r\n\r\n\r\n\r\nfunction ProductEditScreen() {\r\n    const navigate = useNavigate()\r\n    const  { id } = useParams();\r\n    // const orderId = match.params.id\r\n    const productId  = id\r\n\r\n    // console.log('priduct_id is :',productId)\r\n\r\n\r\n    const [name,setName] = useState('')\r\n    const [price,setPrice] = useState(0)\r\n    const [brand,setBrand] = useState('')\r\n    const [category,setCategory] = useState('')\r\n    // const [image,setImage] = useState('')\r\n    const [countInStock,setCountInStock] = useState(0)\r\n    const [description,setDescription] = useState(\"\")\r\n    const [uploading,setUploading] = useState(false)\r\n\r\n    const [images, setImages] = useState(Array.from({ length: 10 }, () => ''));\r\n    const [carousel, setCarousel] = useState(null);\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { error,loading,product } = productDetails\r\n\r\n    \r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const { error:errorUpdate,loading:loadingUpdate,success:successUpdate} = productUpdate\r\n\r\n        \r\n    const userLogin = useSelector((state)=>state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    useEffect (() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type:PRODUCT_UPDATE_RESET})\r\n            navigate('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== Number(productId)) {\r\n            dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name || \"\")\r\n                setPrice(product.price || 0)\r\n                setBrand(product.brand || \"\")\r\n                setCategory(product.category || \"\")\r\n                setDescription(product.description || \"\")\r\n                // setImage(product.image || \"\")\r\n                setCountInStock(product.countInStock || 0)\r\n                setImages(product.images || Array.from({ length: 10 }, () => ''));\r\n                // Assuming there is a field like 'carouselImage' in the product model\r\n                setCarouselImage(product.carousel || null);\r\n            }\r\n        }}\r\n     , [product,productId,navigate,dispatch,successUpdate])\r\n    \r\n    const submitHandeler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            images,\r\n            brand,\r\n            countInStock,\r\n            category,\r\n            description,\r\n            carousel,\r\n            }))\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n    const uploadFileHandler  = async(e,index) =>\r\n     {\r\n        const file = e.target.files[0]\r\n        const formData =new FormData()\r\n\r\n        formData.append('image',file)\r\n        formData.append('product_id',productId)\r\n        setUploading(true)\r\n\r\n        try{\r\n\r\n\r\n            const config ={\r\n                headers:{\r\n                    'Content-Type':'multipart/form-data',\r\n                    Authorization  :`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n\r\n\r\n            const {data} = await axios.post('/api/products/upload/',\r\n            formData,\r\n            config)\r\n\r\n            // setImage(data)\r\n            setImages((prevImages) => {\r\n                const newImages = [...prevImages];\r\n                newImages[index] = data;\r\n                return newImages;\r\n              });9\r\n\r\n            setCarousel(data);\r\n            setUploading(false)\r\n\r\n        }catch(error){\r\n            console.error('File upload error:', error);\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n        <Link to='/admin/productlist'>Go Back</Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant = 'danger'>{errorUpdate}</Message>}\r\n\r\n\r\n            {loading ? <Loader />\r\n            :error ?  (<Message variant='danger'>{error}</Message>)\r\n            :(\r\n                <Form onSubmit={ submitHandeler }>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Name'\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>\r\n                            Price\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='number'\r\n                        placeholder='Enter Price'\r\n                        value={price}\r\n                        onChange={(e)=>setPrice(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* \r\n\r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>\r\n                            Image\r\n                        </Form.Label>\r\n\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter Image'\r\n                        value={image}\r\n                        onChange={(e)=>setImage(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n\r\n                        <Form.Control\r\n                        type='file'\r\n                        label ='Choose Image'\r\n                        custom='true'\r\n                        onChange ={ uploadFileHandler}>\r\n                            \r\n                        </Form.Control>\r\n                        {uploading && <Loader />}\r\n\r\n                    </Form.Group> \r\n */}\r\n\r\n<Form.Group controlId='images'>\r\n              <Form.Label>Images</Form.Label>\r\n              {images.map((image, index) => (\r\n                <Row key={index}>\r\n                  <Col>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder={`Enter Image ${index + 1}`}\r\n                      value={image}\r\n                      onChange={(e) => {\r\n                        setImages((prevImages) => {\r\n                          const newImages = [...prevImages];\r\n                          newImages[index] = e.target.value;\r\n                          return newImages;\r\n                        });\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.File\r\n                      id={`image-${index}`}\r\n                      label={`Choose Image ${index + 1}`}\r\n                      custom\r\n                      onChange={(e) => uploadFileHandler(e, index)}\r\n                    />\r\n                    {uploading && <Loader />}\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n            </Form.Group>\r\n\r\n\r\n\r\n\r\n                          {/* Carousel Image Input */}\r\n            <Form.Group controlId='carouselImage'>\r\n              <Form.Label>Carousel Image</Form.Label>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder={`Enter Carousel Image URL`}\r\n                    value={carouselImage || ''}\r\n                    onChange={(e) => setCarouselImage(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.File\r\n                    id={`carousel-image`}\r\n                    label={`Choose Carousel Image`}\r\n                    custom\r\n                    onChange={(e) => uploadFileHandler(e, 'carousel')}\r\n                  />\r\n                  {uploading && <Loader />}\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n\r\n            {/* Display Carousel */}\r\n            <Form.Group controlId='imageCarousel'>\r\n              <Form.Label>Image Carousel</Form.Label>\r\n              <Carousel>\r\n                {/* Display carousel images from state */}\r\n                {images.map((image, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <img className='d-block w-100' src={image} alt={`Image ${index + 1}`} />\r\n                  </Carousel.Item>\r\n                ))}\r\n                {/* Display carousel image from state */}\r\n                {carouselImage && (\r\n                  <Carousel.Item>\r\n                    <img className='d-block w-100' src={carouselImage} alt='Carousel' />\r\n                  </Carousel.Item>\r\n                )}\r\n              </Carousel>\r\n            </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>\r\n                            Brand\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='brand'\r\n                        value={brand}\r\n                        onChange={(e)=>setBrand(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countinstock'>\r\n                        <Form.Label>\r\n                            Stock\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='number'\r\n                        placeholder='Stock'\r\n                        value={countInStock}\r\n                        onChange={(e)=>setCountInStock(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>\r\n                            Category\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Category'\r\n                        value={category}\r\n                        onChange={(e)=>setCategory(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>\r\n                           Description\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        type='text'\r\n                        placeholder='Description'\r\n                        value={description}\r\n                        onChange={(e)=>setDescription(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <br></br>\r\n\r\n                    <Button \r\n                    type='submit'\r\n                    variant='primary' >\r\n                        Update\r\n                    </Button>\r\n\r\n\r\n                </Form>\r\n\r\n            )}\r\n        </FormContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}