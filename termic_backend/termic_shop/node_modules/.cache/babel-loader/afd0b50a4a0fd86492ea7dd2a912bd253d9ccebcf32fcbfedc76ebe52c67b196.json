{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARI_JOHNSON\\\\Desktop\\\\digital-shop\\\\termic_deploy\\\\termic_backend\\\\termic_shop\\\\src\\\\screens\\\\ProductScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, Form, FormGroup } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview\n  } = productReviewCreate;\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [showImagesModal, setShowImagesModal] = useState(false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment('');\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_RESET\n      });\n    }\n    dispatch(listProductDetails(id));\n  }, [dispatch, id, successProductReview]);\n  const addToCartHandeler = () => {\n    navigate(`/cart/${id}?qty=${qty}`);\n  };\n  const submitHandeler = e => {\n    e.preventDefault();\n    dispatch(createProductReview(id, {\n      rating,\n      comment\n    }));\n  };\n  const viewImagesHandler = () => {\n    setShowImagesModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowImagesModal(false);\n  };\n\n  // return (\n  //   <div>\n  //     <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n  //       {loading ?\n  //         <Loader />\n  //         :\n  //         error ?\n  //         <Message variant={'danger'}> {error}</Message>\n  //         :\n  //         (\n  //           <div>\n  //           <Row>\n\n  //           <Col md={6}>\n  //             <Image src={product.image}  alt ={product.name} style = {{width:'100%',height:'auto',borderRadius:'20px'}}/> \n  //           </Col>\n\n  //           <Col md={3}>\n  //             <ListGroup variant='flush'>\n  //               <ListGroup.Item>\n  //                 <h3>{product.name}</h3>\n  //               </ListGroup.Item>\n\n  //               <ListGroup.Item>\n  //                 <Rating value={product.rating} text={`${product.numReviews} reviews`}  color={'#f8e825'}/>\n  //               </ListGroup.Item>\n\n  //               <ListGroup.Item>\n  //                 <strong>Price : ${product.price} </strong>\n  //               </ListGroup.Item>\n\n  //               <ListGroup.Item>\n  //                 Discription : {product.description}\n  //               </ListGroup.Item>\n  //             </ListGroup>\n  //           </Col>\n\n  //           <Col md={3}>\n  //             <Card>\n  //               <ListGroup variant='flush'>\n  //                 <ListGroup.Item>\n  //                   <Row>\n  //                     <Col> Price:</Col>\n  //                     <Col> <strong>{product.price}</strong> </Col>\n  //                   </Row>\n  //                 </ListGroup.Item>\n\n  //                 <ListGroup.Item>\n  //                   <Row>\n  //                     <Col> Status:</Col>\n  //                     <Col> {product.countInStock >0 ? 'In Stock' :'Out of Stock'}</Col>\n  //                   </Row>\n  //                 </ListGroup.Item>\n\n  //                   {product.countInStock > 0 && (\n  //                     <ListGroup.Item>\n  //                       <Row>\n  //                         <Col>\n  //                         Quantity\n  //                         </Col>\n  //                         <Col className='my-1'>\n  //                           <Form.Control  \n  //                           as='select'\n  //                           value={qty}\n  //                           onChange={(e) => setQty(e.target.value)}\n\n  //                           >\n  //                             {\n  //                               [...Array(product.countInStock).keys()].map((x) => (\n  //                                 <option value={ x + 1 }  key={ x + 1 } >\n  //                                   { x + 1 }\n  //                                 </option>\n  //                               ))\n  //                             }\n  //                           </Form.Control>\n  //                         </Col>\n  //                       </Row>\n  //                     </ListGroup.Item> \n  //                   ) }\n\n  //                 <ListGroup.Item>\n  //                   <Button className='btn-block' \n  //                   type='button' \n  //                   disabled={product.countInStock === 0}\n  //                   onClick={addToCartHandeler}\n  //                   >\n  //                     Add to Cart\n  //                   </Button>\n  //                 </ListGroup.Item>\n\n  //               </ListGroup>\n  //             </Card>\n  //           </Col>\n\n  //           </Row>\n\n  //           <Row>\n  //             <Col md={6}>\n  //               <h4>Reviews</h4>\n  //                 {product.reviews.length === 0 && \n  //                 <Message variant = 'info'>\n  //                   No Reviews\n  //                   </Message>}\n\n  //                 <ListGroup variant='flush'>\n  //                   {product.reviews.map((review)=>(\n  //                     <ListGroup.Item key = {review._id}>\n  //                       <strong>{review.name}</strong>\n  //                       <Rating value={review.rating} color='#f8e835'> </Rating>\n  //                         <p>{ review.createdAt.substring(0,10)}</p>\n  //                         <p>{ review.comment }</p>\n\n  //                     </ListGroup.Item>\n\n  //                   ))}\n\n  //                   <ListGroup.Item>\n  //                     <h4>Write a Review</h4>\n\n  //                     {loadingProductReview && <Loader/>}\n  //                     {successProductReview && <Message variant='success'>Review Successfully Submited</Message>}\n  //                     {errorProductReview && <Message variant='success'>{errorProductReview}</Message>}\n\n  //                     {userInfo  ? (\n  //                       <Form onSubmit={ submitHandeler}>\n\n  //                           <Form.Group controlId='rating'>\n\n  //                             <Form.Label>\n  //                               Rating\n  //                             </Form.Label>\n  //                             <Form.Control as='select' \n  //                             value = {rating} \n  //                             onChange={(e) => setRating(e.target.value)}>\n  //                               <option\n  //                                 value = \"\">\n  //                                   Select ..\n  //                               </option>\n  //                               <option\n  //                                 value = \"1\">\n  //                                   1  -  Poor\n  //                               </option>\n  //                               <option\n  //                                 value = \"2\">\n  //                                   2  -  Fair\n  //                               </option>\n  //                               <option\n  //                                 value = \"3\">\n  //                                   3  -  Good\n  //                               </option>\n  //                               <option\n  //                                 value = \"4\">\n  //                                   4  -  Very Good\n  //                               </option>\n  //                               <option\n  //                                 value = \"5\">\n  //                                  5  -  Excelent\n  //                               </option>\n  //                             </Form.Control>\n  //                           </Form.Group>\n\n  //                         <FormGroup controlId ='comment'>\n  //                             <Form.Label>\n  //                               Review\n  //                             </Form.Label>\n  //                             <Form.Control\n  //                             as = 'textarea'\n  //                             row = '5'\n  //                             value ={comment}\n  //                             placeholder='Wrie a review'\n  //                             onChange={(e)=>setComment(e.target.value)}>\n\n  //                             </Form.Control>\n  //                         </FormGroup>\n\n  //                       <Button disabled ={loadingProductReview} \n  //                       type='submit'\n  //                       variant='primary'>\n  //                         Submit\n  //                       </Button>\n\n  //                       </Form>\n  //                     ) : (\n  //                       <Message variant={'info'}>Please Login <Link to='/login'> login</Link> to write a review </Message>\n  //                     )}\n  //                   </ListGroup.Item>\n\n  //                 </ListGroup>\n  //             </Col>\n  //           </Row>\n  //         </div>\n  //         )\n\n  //       }    \n  //   </div>\n  // )\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: 'danger',\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: product.image,\n            alt: product.name,\n            style: {\n              width: '100%',\n              height: 'auto',\n              borderRadius: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: viewImagesHandler,\n            children: \"View Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showImagesModal,\n        onHide: closeModalHandler,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [product.name, \" - Images\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: product.images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n            src: image.url,\n            alt: `Image ${image.id}`,\n            fluid: true\n          }, image.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: closeModalHandler,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductScreen, \"EMKZoYkg3XvZAI/832vkktShN0o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useParams, useNavigate];\n});\n_c = ProductScreen;\nexport default ProductScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","useNavigate","Row","Col","Image","ListGroup","Card","Button","Form","FormGroup","Rating","useDispatch","useSelector","listProductDetails","createProductReview","Loader","Message","PRODUCT_CREATE_REVIEW_RESET","jsxDEV","_jsxDEV","ProductScreen","_s","dispatch","productDetails","state","loading","error","product","userLogin","userInfo","productReviewCreate","loadingProductReview","errorProductReview","success","successProductReview","qty","setQty","rating","setRating","comment","setComment","showImagesModal","setShowImagesModal","id","navigate","type","addToCartHandeler","submitHandeler","e","preventDefault","viewImagesHandler","closeModalHandler","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","md","src","image","alt","name","style","width","height","borderRadius","onClick","Modal","show","onHide","Header","closeButton","Title","Body","images","map","url","fluid","Footer","_c","$RefreshReg$"],"sources":["C:/Users/HARI_JOHNSON/Desktop/digital-shop/termic_deploy/termic_backend/termic_shop/src/screens/ProductScreen.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport { Link,useParams,useNavigate  } from 'react-router-dom'\r\nimport { Row,Col,Image,ListGroup,Card,Button,Form, FormGroup, } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { listProductDetails,createProductReview } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nfunction ProductScreen(  ) {\r\n \r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n\r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { loading,error,product } = productDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n\r\n  const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n  const { loading:loadingProductReview,\r\n    error:errorProductReview,\r\n    success:successProductReview\r\n   } = productReviewCreate\r\n\r\n\r\n\r\n\r\n  const [qty,setQty] = useState(1)\r\n  const [rating,setRating] = useState(0)\r\n  const [comment,setComment] = useState(\"\")\r\n\r\n\r\n  const [showImagesModal, setShowImagesModal] = useState(false);\r\n\r\n\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n\r\n    if(successProductReview){\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n      dispatch(listProductDetails(id))\r\n    \r\n      },[dispatch,id,successProductReview])\r\n    \r\n  const addToCartHandeler = () =>{\r\n      navigate(`/cart/${id}?qty=${qty}`)\r\n  }\r\n\r\n\r\n\r\n  const submitHandeler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(\r\n     id,{rating,comment}\r\n\r\n    ))\r\n  }\r\n\r\n  const viewImagesHandler = () => {\r\n    setShowImagesModal(true);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowImagesModal(false);\r\n  };\r\n\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n  //       {loading ?\r\n  //         <Loader />\r\n  //         :\r\n  //         error ?\r\n  //         <Message variant={'danger'}> {error}</Message>\r\n  //         :\r\n  //         (\r\n  //           <div>\r\n  //           <Row>\r\n\r\n  //           <Col md={6}>\r\n  //             <Image src={product.image}  alt ={product.name} style = {{width:'100%',height:'auto',borderRadius:'20px'}}/> \r\n  //           </Col>\r\n    \r\n  //           <Col md={3}>\r\n  //             <ListGroup variant='flush'>\r\n  //               <ListGroup.Item>\r\n  //                 <h3>{product.name}</h3>\r\n  //               </ListGroup.Item>\r\n    \r\n  //               <ListGroup.Item>\r\n  //                 <Rating value={product.rating} text={`${product.numReviews} reviews`}  color={'#f8e825'}/>\r\n  //               </ListGroup.Item>\r\n                \r\n  //               <ListGroup.Item>\r\n  //                 <strong>Price : ${product.price} </strong>\r\n  //               </ListGroup.Item>\r\n    \r\n  //               <ListGroup.Item>\r\n  //                 Discription : {product.description}\r\n  //               </ListGroup.Item>\r\n  //             </ListGroup>\r\n  //           </Col>\r\n    \r\n  //           <Col md={3}>\r\n  //             <Card>\r\n  //               <ListGroup variant='flush'>\r\n  //                 <ListGroup.Item>\r\n  //                   <Row>\r\n  //                     <Col> Price:</Col>\r\n  //                     <Col> <strong>{product.price}</strong> </Col>\r\n  //                   </Row>\r\n  //                 </ListGroup.Item>\r\n    \r\n    \r\n  //                 <ListGroup.Item>\r\n  //                   <Row>\r\n  //                     <Col> Status:</Col>\r\n  //                     <Col> {product.countInStock >0 ? 'In Stock' :'Out of Stock'}</Col>\r\n  //                   </Row>\r\n  //                 </ListGroup.Item>\r\n\r\n\r\n\r\n                  \r\n  //                   {product.countInStock > 0 && (\r\n  //                     <ListGroup.Item>\r\n  //                       <Row>\r\n  //                         <Col>\r\n  //                         Quantity\r\n  //                         </Col>\r\n  //                         <Col className='my-1'>\r\n  //                           <Form.Control  \r\n  //                           as='select'\r\n  //                           value={qty}\r\n  //                           onChange={(e) => setQty(e.target.value)}\r\n\r\n  //                           >\r\n  //                             {\r\n  //                               [...Array(product.countInStock).keys()].map((x) => (\r\n  //                                 <option value={ x + 1 }  key={ x + 1 } >\r\n  //                                   { x + 1 }\r\n  //                                 </option>\r\n  //                               ))\r\n  //                             }\r\n  //                           </Form.Control>\r\n  //                         </Col>\r\n  //                       </Row>\r\n  //                     </ListGroup.Item> \r\n  //                   ) }\r\n                  \r\n\r\n\r\n  //                 <ListGroup.Item>\r\n  //                   <Button className='btn-block' \r\n  //                   type='button' \r\n  //                   disabled={product.countInStock === 0}\r\n  //                   onClick={addToCartHandeler}\r\n  //                   >\r\n  //                     Add to Cart\r\n  //                   </Button>\r\n  //                 </ListGroup.Item>\r\n    \r\n    \r\n  //               </ListGroup>\r\n  //             </Card>\r\n  //           </Col>\r\n    \r\n  //           </Row>\r\n\r\n  //           <Row>\r\n  //             <Col md={6}>\r\n  //               <h4>Reviews</h4>\r\n  //                 {product.reviews.length === 0 && \r\n  //                 <Message variant = 'info'>\r\n  //                   No Reviews\r\n  //                   </Message>}\r\n\r\n  //                 <ListGroup variant='flush'>\r\n  //                   {product.reviews.map((review)=>(\r\n  //                     <ListGroup.Item key = {review._id}>\r\n  //                       <strong>{review.name}</strong>\r\n  //                       <Rating value={review.rating} color='#f8e835'> </Rating>\r\n  //                         <p>{ review.createdAt.substring(0,10)}</p>\r\n  //                         <p>{ review.comment }</p>\r\n                        \r\n  //                     </ListGroup.Item>\r\n\r\n  //                   ))}\r\n\r\n\r\n  //                   <ListGroup.Item>\r\n  //                     <h4>Write a Review</h4>\r\n\r\n  //                     {loadingProductReview && <Loader/>}\r\n  //                     {successProductReview && <Message variant='success'>Review Successfully Submited</Message>}\r\n  //                     {errorProductReview && <Message variant='success'>{errorProductReview}</Message>}\r\n                      \r\n                      \r\n                      \r\n                      \r\n  //                     {userInfo  ? (\r\n  //                       <Form onSubmit={ submitHandeler}>\r\n\r\n  //                           <Form.Group controlId='rating'>\r\n\r\n  //                             <Form.Label>\r\n  //                               Rating\r\n  //                             </Form.Label>\r\n  //                             <Form.Control as='select' \r\n  //                             value = {rating} \r\n  //                             onChange={(e) => setRating(e.target.value)}>\r\n  //                               <option\r\n  //                                 value = \"\">\r\n  //                                   Select ..\r\n  //                               </option>\r\n  //                               <option\r\n  //                                 value = \"1\">\r\n  //                                   1  -  Poor\r\n  //                               </option>\r\n  //                               <option\r\n  //                                 value = \"2\">\r\n  //                                   2  -  Fair\r\n  //                               </option>\r\n  //                               <option\r\n  //                                 value = \"3\">\r\n  //                                   3  -  Good\r\n  //                               </option>\r\n  //                               <option\r\n  //                                 value = \"4\">\r\n  //                                   4  -  Very Good\r\n  //                               </option>\r\n  //                               <option\r\n  //                                 value = \"5\">\r\n  //                                  5  -  Excelent\r\n  //                               </option>\r\n  //                             </Form.Control>\r\n  //                           </Form.Group>\r\n\r\n\r\n  //                         <FormGroup controlId ='comment'>\r\n  //                             <Form.Label>\r\n  //                               Review\r\n  //                             </Form.Label>\r\n  //                             <Form.Control\r\n  //                             as = 'textarea'\r\n  //                             row = '5'\r\n  //                             value ={comment}\r\n  //                             placeholder='Wrie a review'\r\n  //                             onChange={(e)=>setComment(e.target.value)}>\r\n\r\n  //                             </Form.Control>\r\n  //                         </FormGroup>\r\n\r\n  //                       <Button disabled ={loadingProductReview} \r\n  //                       type='submit'\r\n  //                       variant='primary'>\r\n  //                         Submit\r\n  //                       </Button>\r\n\r\n  //                       </Form>\r\n  //                     ) : (\r\n  //                       <Message variant={'info'}>Please Login <Link to='/login'> login</Link> to write a review </Message>\r\n  //                     )}\r\n  //                   </ListGroup.Item>\r\n                      \r\n  //                 </ListGroup>\r\n  //             </Col>\r\n  //           </Row>\r\n  //         </div>\r\n  //         )\r\n        \r\n  //       }    \r\n  //   </div>\r\n  // )\r\n  return (\r\n    <div>\r\n      <Link to='/' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant={'danger'}> {error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image\r\n                src={product.image}\r\n                alt={product.name}\r\n                style={{ width: '100%', height: 'auto', borderRadius: '20px' }}\r\n              />\r\n              <Button variant='secondary' onClick={viewImagesHandler}>\r\n                View Images\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                {/* ... (existing code) */}\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  {/* ... (existing code) */}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Reviews Section */}\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4>Reviews</h4>\r\n              {/* ... (existing code) */}\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Modal to display multiple images */}\r\n          <Modal show={showImagesModal} onHide={closeModalHandler}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{product.name} - Images</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              {/* Display all images within the modal */}\r\n              {product.images.map((image) => (\r\n                <Image key={image.id} src={image.url} alt={`Image ${image.id}`} fluid />\r\n              ))}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant='secondary' onClick={closeModalHandler}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default ProductScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}