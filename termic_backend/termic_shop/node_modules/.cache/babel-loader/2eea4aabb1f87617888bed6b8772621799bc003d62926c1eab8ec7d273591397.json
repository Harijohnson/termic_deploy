{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARI_JOHNSON\\\\Desktop\\\\digital-shop\\\\termic_deploy\\\\termic_backend\\\\termic_shop\\\\src\\\\screens\\\\ProductScreen.js\",\n  _s = $RefreshSig$();\n// import React,{useEffect, useState} from 'react'\n// import { Link,useParams,useNavigate  } from 'react-router-dom'\n// import { Row,Col,Image,ListGroup,Card,Button,Form, FormGroup, Modal} from 'react-bootstrap'\n// import Rating from '../components/Rating'\n// import { useDispatch,useSelector } from 'react-redux'\n// import { listProductDetails,createProductReview } from '../actions/productActions'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n\n// import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\n// function ProductScreen(  ) {\n\n//   const dispatch = useDispatch()\n\n//   const productDetails = useSelector(state => state.productDetails)\n//   const { loading,error,product } = productDetails\n\n//   const userLogin = useSelector(state => state.userLogin)\n//   const { userInfo } = userLogin\n\n//   const productReviewCreate = useSelector(state => state.productReviewCreate)\n//   const { loading:loadingProductReview,\n//     error:errorProductReview,\n//     success:successProductReview\n//    } = productReviewCreate\n\n//   const [qty,setQty] = useState(1)\n//   const [rating,setRating] = useState(0)\n//   const [comment,setComment] = useState(\"\")\n\n//   const [showImagesModal, setShowImagesModal] = useState(false);\n\n//   const { id } = useParams();\n\n//   const navigate = useNavigate();\n\n//   useEffect(()=>{\n\n//     if(successProductReview){\n//       setRating(0)\n//       setComment('')\n//       dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\n//     }\n\n//       dispatch(listProductDetails(id))\n\n//       },[dispatch,id,successProductReview])\n\n//   const addToCartHandeler = () =>{\n//       navigate(`/cart/${id}?qty=${qty}`)\n//   }\n\n//   const submitHandeler = (e) => {\n//     e.preventDefault()\n//     dispatch(createProductReview(\n//      id,{rating,comment}\n\n//     ))\n//   }\n\n//   const viewImagesHandler = () => {\n//     setShowImagesModal(true);\n//   };\n\n//   const closeModalHandler = () => {\n//     setShowImagesModal(false);\n//   };\n\n//   // return (\n//   //   <div>\n//   //     <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n//   //       {loading ?\n//   //         <Loader />\n//   //         :\n//   //         error ?\n//   //         <Message variant={'danger'}> {error}</Message>\n//   //         :\n//   //         (\n//   //           <div>\n//   //           <Row>\n\n//   //           <Col md={6}>\n//   //             <Image src={product.image}  alt ={product.name} style = {{width:'100%',height:'auto',borderRadius:'20px'}}/> \n//   //           </Col>\n\n//   //           <Col md={3}>\n//   //             <ListGroup variant='flush'>\n//   //               <ListGroup.Item>\n//   //                 <h3>{product.name}</h3>\n//   //               </ListGroup.Item>\n\n//   //               <ListGroup.Item>\n//   //                 <Rating value={product.rating} text={`${product.numReviews} reviews`}  color={'#f8e825'}/>\n//   //               </ListGroup.Item>\n\n//   //               <ListGroup.Item>\n//   //                 <strong>Price : ${product.price} </strong>\n//   //               </ListGroup.Item>\n\n//   //               <ListGroup.Item>\n//   //                 Discription : {product.description}\n//   //               </ListGroup.Item>\n//   //             </ListGroup>\n//   //           </Col>\n\n//   //           <Col md={3}>\n//   //             <Card>\n//   //               <ListGroup variant='flush'>\n//   //                 <ListGroup.Item>\n//   //                   <Row>\n//   //                     <Col> Price:</Col>\n//   //                     <Col> <strong>{product.price}</strong> </Col>\n//   //                   </Row>\n//   //                 </ListGroup.Item>\n\n//   //                 <ListGroup.Item>\n//   //                   <Row>\n//   //                     <Col> Status:</Col>\n//   //                     <Col> {product.countInStock >0 ? 'In Stock' :'Out of Stock'}</Col>\n//   //                   </Row>\n//   //                 </ListGroup.Item>\n\n//   //                   {product.countInStock > 0 && (\n//   //                     <ListGroup.Item>\n//   //                       <Row>\n//   //                         <Col>\n//   //                         Quantity\n//   //                         </Col>\n//   //                         <Col className='my-1'>\n//   //                           <Form.Control  \n//   //                           as='select'\n//   //                           value={qty}\n//   //                           onChange={(e) => setQty(e.target.value)}\n\n//   //                           >\n//   //                             {\n//   //                               [...Array(product.countInStock).keys()].map((x) => (\n//   //                                 <option value={ x + 1 }  key={ x + 1 } >\n//   //                                   { x + 1 }\n//   //                                 </option>\n//   //                               ))\n//   //                             }\n//   //                           </Form.Control>\n//   //                         </Col>\n//   //                       </Row>\n//   //                     </ListGroup.Item> \n//   //                   ) }\n\n//   //                 <ListGroup.Item>\n//   //                   <Button className='btn-block' \n//   //                   type='button' \n//   //                   disabled={product.countInStock === 0}\n//   //                   onClick={addToCartHandeler}\n//   //                   >\n//   //                     Add to Cart\n//   //                   </Button>\n//   //                 </ListGroup.Item>\n\n//   //               </ListGroup>\n//   //             </Card>\n//   //           </Col>\n\n//   //           </Row>\n\n//   //           <Row>\n//   //             <Col md={6}>\n//   //               <h4>Reviews</h4>\n//   //                 {product.reviews.length === 0 && \n//   //                 <Message variant = 'info'>\n//   //                   No Reviews\n//   //                   </Message>}\n\n//   //                 <ListGroup variant='flush'>\n//   //                   {product.reviews.map((review)=>(\n//   //                     <ListGroup.Item key = {review._id}>\n//   //                       <strong>{review.name}</strong>\n//   //                       <Rating value={review.rating} color='#f8e835'> </Rating>\n//   //                         <p>{ review.createdAt.substring(0,10)}</p>\n//   //                         <p>{ review.comment }</p>\n\n//   //                     </ListGroup.Item>\n\n//   //                   ))}\n\n//   //                   <ListGroup.Item>\n//   //                     <h4>Write a Review</h4>\n\n//   //                     {loadingProductReview && <Loader/>}\n//   //                     {successProductReview && <Message variant='success'>Review Successfully Submited</Message>}\n//   //                     {errorProductReview && <Message variant='success'>{errorProductReview}</Message>}\n\n//   //                     {userInfo  ? (\n//   //                       <Form onSubmit={ submitHandeler}>\n\n//   //                           <Form.Group controlId='rating'>\n\n//   //                             <Form.Label>\n//   //                               Rating\n//   //                             </Form.Label>\n//   //                             <Form.Control as='select' \n//   //                             value = {rating} \n//   //                             onChange={(e) => setRating(e.target.value)}>\n//   //                               <option\n//   //                                 value = \"\">\n//   //                                   Select ..\n//   //                               </option>\n//   //                               <option\n//   //                                 value = \"1\">\n//   //                                   1  -  Poor\n//   //                               </option>\n//   //                               <option\n//   //                                 value = \"2\">\n//   //                                   2  -  Fair\n//   //                               </option>\n//   //                               <option\n//   //                                 value = \"3\">\n//   //                                   3  -  Good\n//   //                               </option>\n//   //                               <option\n//   //                                 value = \"4\">\n//   //                                   4  -  Very Good\n//   //                               </option>\n//   //                               <option\n//   //                                 value = \"5\">\n//   //                                  5  -  Excelent\n//   //                               </option>\n//   //                             </Form.Control>\n//   //                           </Form.Group>\n\n//   //                         <FormGroup controlId ='comment'>\n//   //                             <Form.Label>\n//   //                               Review\n//   //                             </Form.Label>\n//   //                             <Form.Control\n//   //                             as = 'textarea'\n//   //                             row = '5'\n//   //                             value ={comment}\n//   //                             placeholder='Wrie a review'\n//   //                             onChange={(e)=>setComment(e.target.value)}>\n\n//   //                             </Form.Control>\n//   //                         </FormGroup>\n\n//   //                       <Button disabled ={loadingProductReview} \n//   //                       type='submit'\n//   //                       variant='primary'>\n//   //                         Submit\n//   //                       </Button>\n\n//   //                       </Form>\n//   //                     ) : (\n//   //                       <Message variant={'info'}>Please Login <Link to='/login'> login</Link> to write a review </Message>\n//   //                     )}\n//   //                   </ListGroup.Item>\n\n//   //                 </ListGroup>\n//   //             </Col>\n//   //           </Row>\n//   //         </div>\n//   //         )\n\n//   //       }    \n//   //   </div>\n//   // )\n//   return (\n//     <div>\n//       <Link to='/' className='btn btn-light my-3'>\n//         Go Back\n//       </Link>\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant={'danger'}> {error}</Message>\n//       ) : (\n//         <div>\n//           <Row>\n//             <Col md={6}>\n//               <Image\n//                 src={product.image}\n//                 alt={product.name}\n//                 style={{ width: '100%', height: 'auto', borderRadius: '20px' }}\n//               />\n//               <Button variant='secondary' onClick={viewImagesHandler}>\n//                 View Images\n//               </Button>\n//             </Col>\n\n//             <Col md={3}>\n//               <ListGroup variant='flush'>\n//                 {/* ... (existing code) */}\n//               </ListGroup>\n//             </Col>\n\n//             <Col md={3}>\n//               <Card>\n//                 <ListGroup variant='flush'>\n//                   {/* ... (existing code) */}\n//                 </ListGroup>\n//               </Card>\n//             </Col>\n//           </Row>\n\n//           {/* Reviews Section */}\n//           <Row>\n//             <Col md={6}>\n//               <h4>Reviews</h4>\n//               {/* ... (existing code) */}\n//             </Col>\n//           </Row>\n\n//           {/* Modal to display multiple images */}\n//           <Modal show={showImagesModal} onHide={closeModalHandler}>\n//             <Modal.Header closeButton>\n//               <Modal.Title>{product.name} - Images</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//               {/* Display all images within the modal */}\n//               {product.images.map((image) => (\n//                 <Image key={image.id} src={image.url} alt={`Image ${image.id}`} fluid />\n//               ))}\n//             </Modal.Body>\n//             <Modal.Footer>\n//               <Button variant='secondary' onClick={closeModalHandler}>\n//                 Close\n//               </Button>\n//             </Modal.Footer>\n//           </Modal>\n//         </div>\n//       )}\n//     </div>\n//   );\n\n// }\n\n// export default ProductScreen\n// ProductScreen.js\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview\n  } = productReviewCreate;\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [selectedImage, setSelectedImage] = useState(product.image);\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment('');\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_RESET\n      });\n    }\n    dispatch(listProductDetails(id));\n  }, [dispatch, id, successProductReview]);\n  const addToCartHandler = () => {\n    navigate(`/cart/${id}?qty=${qty}`);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createProductReview(id, {\n      rating,\n      comment\n    }));\n  };\n  const imageClickHandler = image => {\n    setSelectedImage(image);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: 'danger',\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: selectedImage,\n            alt: product.name,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-3\",\n            children: product.images && product.images.map(image => /*#__PURE__*/_jsxDEV(Col, {\n              className: \"image-thumbnail\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: image.url,\n                alt: `Thumbnail ${image.id}`,\n                onClick: () => imageClickHandler(image.url),\n                className: selectedImage === image.url ? 'selected' : '',\n                fluid: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 23\n              }, this)\n            }, image.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews} reviews`,\n                color: '#f8e825'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Price : $\", product.price, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Discription : \", product.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductScreen, \"/CycR+JaJMVzD4pQLqQZk9RjOG0=\", false, function () {\n  return [useDispatch, useParams, useNavigate, useSelector, useSelector, useSelector];\n});\n_c = ProductScreen;\nexport default ProductScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","useNavigate","Row","Col","Image","ListGroup","Card","Button","Form","Rating","useDispatch","useSelector","listProductDetails","createProductReview","Loader","Message","PRODUCT_CREATE_REVIEW_RESET","jsxDEV","_jsxDEV","ProductScreen","_s","dispatch","id","navigate","productDetails","state","loading","error","product","userLogin","userInfo","productReviewCreate","loadingProductReview","errorProductReview","success","successProductReview","qty","setQty","rating","setRating","comment","setComment","selectedImage","setSelectedImage","image","type","addToCartHandler","submitHandler","e","preventDefault","imageClickHandler","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","md","src","alt","name","fluid","images","map","url","onClick","Item","value","text","numReviews","color","price","description","_c","$RefreshReg$"],"sources":["C:/Users/HARI_JOHNSON/Desktop/digital-shop/termic_deploy/termic_backend/termic_shop/src/screens/ProductScreen.js"],"sourcesContent":["// import React,{useEffect, useState} from 'react'\r\n// import { Link,useParams,useNavigate  } from 'react-router-dom'\r\n// import { Row,Col,Image,ListGroup,Card,Button,Form, FormGroup, Modal} from 'react-bootstrap'\r\n// import Rating from '../components/Rating'\r\n// import { useDispatch,useSelector } from 'react-redux'\r\n// import { listProductDetails,createProductReview } from '../actions/productActions'\r\n// import Loader from '../components/Loader'\r\n// import Message from '../components/Message'\r\n\r\n// import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\n// function ProductScreen(  ) {\r\n \r\n//   const dispatch = useDispatch()\r\n\r\n\r\n\r\n\r\n//   const productDetails = useSelector(state => state.productDetails)\r\n//   const { loading,error,product } = productDetails\r\n\r\n//   const userLogin = useSelector(state => state.userLogin)\r\n//   const { userInfo } = userLogin\r\n\r\n\r\n//   const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n//   const { loading:loadingProductReview,\r\n//     error:errorProductReview,\r\n//     success:successProductReview\r\n//    } = productReviewCreate\r\n\r\n\r\n\r\n\r\n//   const [qty,setQty] = useState(1)\r\n//   const [rating,setRating] = useState(0)\r\n//   const [comment,setComment] = useState(\"\")\r\n\r\n\r\n//   const [showImagesModal, setShowImagesModal] = useState(false);\r\n\r\n\r\n//   const { id } = useParams();\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(()=>{\r\n\r\n//     if(successProductReview){\r\n//       setRating(0)\r\n//       setComment('')\r\n//       dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n//       dispatch(listProductDetails(id))\r\n    \r\n//       },[dispatch,id,successProductReview])\r\n    \r\n//   const addToCartHandeler = () =>{\r\n//       navigate(`/cart/${id}?qty=${qty}`)\r\n//   }\r\n\r\n\r\n\r\n//   const submitHandeler = (e) => {\r\n//     e.preventDefault()\r\n//     dispatch(createProductReview(\r\n//      id,{rating,comment}\r\n\r\n//     ))\r\n//   }\r\n\r\n//   const viewImagesHandler = () => {\r\n//     setShowImagesModal(true);\r\n//   };\r\n\r\n//   const closeModalHandler = () => {\r\n//     setShowImagesModal(false);\r\n//   };\r\n\r\n\r\n//   // return (\r\n//   //   <div>\r\n//   //     <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n//   //       {loading ?\r\n//   //         <Loader />\r\n//   //         :\r\n//   //         error ?\r\n//   //         <Message variant={'danger'}> {error}</Message>\r\n//   //         :\r\n//   //         (\r\n//   //           <div>\r\n//   //           <Row>\r\n\r\n//   //           <Col md={6}>\r\n//   //             <Image src={product.image}  alt ={product.name} style = {{width:'100%',height:'auto',borderRadius:'20px'}}/> \r\n//   //           </Col>\r\n    \r\n//   //           <Col md={3}>\r\n//   //             <ListGroup variant='flush'>\r\n//   //               <ListGroup.Item>\r\n//   //                 <h3>{product.name}</h3>\r\n//   //               </ListGroup.Item>\r\n    \r\n//   //               <ListGroup.Item>\r\n//   //                 <Rating value={product.rating} text={`${product.numReviews} reviews`}  color={'#f8e825'}/>\r\n//   //               </ListGroup.Item>\r\n                \r\n//   //               <ListGroup.Item>\r\n//   //                 <strong>Price : ${product.price} </strong>\r\n//   //               </ListGroup.Item>\r\n    \r\n//   //               <ListGroup.Item>\r\n//   //                 Discription : {product.description}\r\n//   //               </ListGroup.Item>\r\n//   //             </ListGroup>\r\n//   //           </Col>\r\n    \r\n//   //           <Col md={3}>\r\n//   //             <Card>\r\n//   //               <ListGroup variant='flush'>\r\n//   //                 <ListGroup.Item>\r\n//   //                   <Row>\r\n//   //                     <Col> Price:</Col>\r\n//   //                     <Col> <strong>{product.price}</strong> </Col>\r\n//   //                   </Row>\r\n//   //                 </ListGroup.Item>\r\n    \r\n    \r\n//   //                 <ListGroup.Item>\r\n//   //                   <Row>\r\n//   //                     <Col> Status:</Col>\r\n//   //                     <Col> {product.countInStock >0 ? 'In Stock' :'Out of Stock'}</Col>\r\n//   //                   </Row>\r\n//   //                 </ListGroup.Item>\r\n\r\n\r\n\r\n                  \r\n//   //                   {product.countInStock > 0 && (\r\n//   //                     <ListGroup.Item>\r\n//   //                       <Row>\r\n//   //                         <Col>\r\n//   //                         Quantity\r\n//   //                         </Col>\r\n//   //                         <Col className='my-1'>\r\n//   //                           <Form.Control  \r\n//   //                           as='select'\r\n//   //                           value={qty}\r\n//   //                           onChange={(e) => setQty(e.target.value)}\r\n\r\n//   //                           >\r\n//   //                             {\r\n//   //                               [...Array(product.countInStock).keys()].map((x) => (\r\n//   //                                 <option value={ x + 1 }  key={ x + 1 } >\r\n//   //                                   { x + 1 }\r\n//   //                                 </option>\r\n//   //                               ))\r\n//   //                             }\r\n//   //                           </Form.Control>\r\n//   //                         </Col>\r\n//   //                       </Row>\r\n//   //                     </ListGroup.Item> \r\n//   //                   ) }\r\n                  \r\n\r\n\r\n//   //                 <ListGroup.Item>\r\n//   //                   <Button className='btn-block' \r\n//   //                   type='button' \r\n//   //                   disabled={product.countInStock === 0}\r\n//   //                   onClick={addToCartHandeler}\r\n//   //                   >\r\n//   //                     Add to Cart\r\n//   //                   </Button>\r\n//   //                 </ListGroup.Item>\r\n    \r\n    \r\n//   //               </ListGroup>\r\n//   //             </Card>\r\n//   //           </Col>\r\n    \r\n//   //           </Row>\r\n\r\n//   //           <Row>\r\n//   //             <Col md={6}>\r\n//   //               <h4>Reviews</h4>\r\n//   //                 {product.reviews.length === 0 && \r\n//   //                 <Message variant = 'info'>\r\n//   //                   No Reviews\r\n//   //                   </Message>}\r\n\r\n//   //                 <ListGroup variant='flush'>\r\n//   //                   {product.reviews.map((review)=>(\r\n//   //                     <ListGroup.Item key = {review._id}>\r\n//   //                       <strong>{review.name}</strong>\r\n//   //                       <Rating value={review.rating} color='#f8e835'> </Rating>\r\n//   //                         <p>{ review.createdAt.substring(0,10)}</p>\r\n//   //                         <p>{ review.comment }</p>\r\n                        \r\n//   //                     </ListGroup.Item>\r\n\r\n//   //                   ))}\r\n\r\n\r\n//   //                   <ListGroup.Item>\r\n//   //                     <h4>Write a Review</h4>\r\n\r\n//   //                     {loadingProductReview && <Loader/>}\r\n//   //                     {successProductReview && <Message variant='success'>Review Successfully Submited</Message>}\r\n//   //                     {errorProductReview && <Message variant='success'>{errorProductReview}</Message>}\r\n                      \r\n                      \r\n                      \r\n                      \r\n//   //                     {userInfo  ? (\r\n//   //                       <Form onSubmit={ submitHandeler}>\r\n\r\n//   //                           <Form.Group controlId='rating'>\r\n\r\n//   //                             <Form.Label>\r\n//   //                               Rating\r\n//   //                             </Form.Label>\r\n//   //                             <Form.Control as='select' \r\n//   //                             value = {rating} \r\n//   //                             onChange={(e) => setRating(e.target.value)}>\r\n//   //                               <option\r\n//   //                                 value = \"\">\r\n//   //                                   Select ..\r\n//   //                               </option>\r\n//   //                               <option\r\n//   //                                 value = \"1\">\r\n//   //                                   1  -  Poor\r\n//   //                               </option>\r\n//   //                               <option\r\n//   //                                 value = \"2\">\r\n//   //                                   2  -  Fair\r\n//   //                               </option>\r\n//   //                               <option\r\n//   //                                 value = \"3\">\r\n//   //                                   3  -  Good\r\n//   //                               </option>\r\n//   //                               <option\r\n//   //                                 value = \"4\">\r\n//   //                                   4  -  Very Good\r\n//   //                               </option>\r\n//   //                               <option\r\n//   //                                 value = \"5\">\r\n//   //                                  5  -  Excelent\r\n//   //                               </option>\r\n//   //                             </Form.Control>\r\n//   //                           </Form.Group>\r\n\r\n\r\n//   //                         <FormGroup controlId ='comment'>\r\n//   //                             <Form.Label>\r\n//   //                               Review\r\n//   //                             </Form.Label>\r\n//   //                             <Form.Control\r\n//   //                             as = 'textarea'\r\n//   //                             row = '5'\r\n//   //                             value ={comment}\r\n//   //                             placeholder='Wrie a review'\r\n//   //                             onChange={(e)=>setComment(e.target.value)}>\r\n\r\n//   //                             </Form.Control>\r\n//   //                         </FormGroup>\r\n\r\n//   //                       <Button disabled ={loadingProductReview} \r\n//   //                       type='submit'\r\n//   //                       variant='primary'>\r\n//   //                         Submit\r\n//   //                       </Button>\r\n\r\n//   //                       </Form>\r\n//   //                     ) : (\r\n//   //                       <Message variant={'info'}>Please Login <Link to='/login'> login</Link> to write a review </Message>\r\n//   //                     )}\r\n//   //                   </ListGroup.Item>\r\n                      \r\n//   //                 </ListGroup>\r\n//   //             </Col>\r\n//   //           </Row>\r\n//   //         </div>\r\n//   //         )\r\n        \r\n//   //       }    \r\n//   //   </div>\r\n//   // )\r\n//   return (\r\n//     <div>\r\n//       <Link to='/' className='btn btn-light my-3'>\r\n//         Go Back\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant={'danger'}> {error}</Message>\r\n//       ) : (\r\n//         <div>\r\n//           <Row>\r\n//             <Col md={6}>\r\n//               <Image\r\n//                 src={product.image}\r\n//                 alt={product.name}\r\n//                 style={{ width: '100%', height: 'auto', borderRadius: '20px' }}\r\n//               />\r\n//               <Button variant='secondary' onClick={viewImagesHandler}>\r\n//                 View Images\r\n//               </Button>\r\n//             </Col>\r\n\r\n//             <Col md={3}>\r\n//               <ListGroup variant='flush'>\r\n//                 {/* ... (existing code) */}\r\n//               </ListGroup>\r\n//             </Col>\r\n\r\n//             <Col md={3}>\r\n//               <Card>\r\n//                 <ListGroup variant='flush'>\r\n//                   {/* ... (existing code) */}\r\n//                 </ListGroup>\r\n//               </Card>\r\n//             </Col>\r\n//           </Row>\r\n\r\n//           {/* Reviews Section */}\r\n//           <Row>\r\n//             <Col md={6}>\r\n//               <h4>Reviews</h4>\r\n//               {/* ... (existing code) */}\r\n//             </Col>\r\n//           </Row>\r\n\r\n//           {/* Modal to display multiple images */}\r\n//           <Modal show={showImagesModal} onHide={closeModalHandler}>\r\n//             <Modal.Header closeButton>\r\n//               <Modal.Title>{product.name} - Images</Modal.Title>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//               {/* Display all images within the modal */}\r\n//               {product.images.map((image) => (\r\n//                 <Image key={image.id} src={image.url} alt={`Image ${image.id}`} fluid />\r\n//               ))}\r\n//             </Modal.Body>\r\n//             <Modal.Footer>\r\n//               <Button variant='secondary' onClick={closeModalHandler}>\r\n//                 Close\r\n//               </Button>\r\n//             </Modal.Footer>\r\n//           </Modal>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n\r\n// }\r\n\r\n// export default ProductScreen\r\n// ProductScreen.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductScreen() {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [selectedImage, setSelectedImage] = useState(product.image);\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProductDetails(id));\r\n  }, [dispatch, id, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    navigate(`/cart/${id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(id, { rating, comment }));\r\n  };\r\n\r\n  const imageClickHandler = (image) => {\r\n    setSelectedImage(image);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant={'danger'}>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={selectedImage} alt={product.name} fluid />\r\n              <Row className='mt-3'>\r\n                {product.images &&\r\n                  product.images.map((image) => (\r\n                    <Col key={image.id} className='image-thumbnail'>\r\n                      <Image\r\n                        src={image.url}\r\n                        alt={`Thumbnail ${image.id}`}\r\n                        onClick={() => imageClickHandler(image.url)}\r\n                        className={selectedImage === image.url ? 'selected' : ''}\r\n                        fluid\r\n                      />\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <strong>Price : ${product.price} </strong>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Discription : {product.description}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Reviews Section */}\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4>Reviews</h4>\r\n              {/* ... (existing code) */}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;;AAKA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAGA;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAMA;;AAEA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAKA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}